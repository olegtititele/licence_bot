import logging
import random
import re
from aiogram import Bot, Dispatcher, executor, types

from aiogram import types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.types import InputFile, InputMedia
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from telegram import ParseMode
from keyboards import *

import config.config as cf
from db.db import DB



bot = Bot(token=cf.TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

logging.basicConfig(level=logging.INFO)

class Admin(StatesGroup):
    alert = State()

@dp.message_handler(commands="start")
async def start_message(message: types.Message):
    db = DB()
    if not db.check_user(message.from_user.id):
        db.add_user(message.from_user.id)
    else:
        pass
    if check_sub_channel(await bot.get_chat_member(chat_id=cf.channel_chat_id, user_id=message.from_user.id)):

        await bot.send_message(
            chat_id=message.chat.id,
            text=f"<b>{message.from_user.first_name}, –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>",
            parse_mode=ParseMode.HTML,
            reply_markup=keyboards.main_menu_kb
        )

        photo = InputFile(cf.main_menu_photo)
        await bot.send_photo(
            chat_id=message.chat.id, 
            photo=photo, 
            caption="<b>–í—Å—é –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –∑–¥–µ—Å—å!\n–ë–æ—Ç –≤—Å–µ–≥–¥–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∏ –¥–æ–Ω–æ—Å–∏—Ç —Å–∞–º—É—é –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n\n–°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞:</b> <code>–†–∞–±–æ—Ç–∞—éüëå</code>", 
            parse_mode=ParseMode.HTML, 
            reply_markup=keyboards.menu_kb
        )
    else:
        link = f'<a href="{cf.channel_link}">–∫–∞–Ω–∞–ª</a>'
        text = f"<b>‚ùï –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –≤—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ {link}.</b>"
        await bot.send_message(
            chat_id=message.chat.id,
            text=text,
            parse_mode=ParseMode.HTML,
            reply_markup=keyboards.check_sub_kb
        )

@dp.message_handler(commands="admin")
async def admin_message(message: types.Message):
    db = DB()
    
    if message.chat.id in cf.admins_chat_id:
        await bot.send_message(
            chat_id=message.chat.id,
            text=f"<b>üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å \n\n–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {db.get_users_len()}</b>",
            parse_mode=ParseMode.HTML,
            reply_markup=keyboards.admin_kb
        )

@dp.message_handler()
async def message_handler(message: types.Message):
    if check_sub_channel(await bot.get_chat_member(chat_id=cf.channel_chat_id, user_id=message.from_user.id)):
        if message.text == "üè† –ú–µ–Ω—é":
            await bot.send_message(
                chat_id=message.chat.id,
                text=f"<b>{message.from_user.first_name}, –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>",
                parse_mode=ParseMode.HTML,
                reply_markup=keyboards.main_menu_kb
            )

            photo = InputFile(cf.main_menu_photo)
            await bot.send_photo(
                chat_id=message.chat.id, 
                photo=photo, 
                caption="<b>–í—Å—é –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –∑–¥–µ—Å—å!\n–ë–æ—Ç –≤—Å–µ–≥–¥–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∏ –¥–æ–Ω–æ—Å–∏—Ç —Å–∞–º—É—é –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n\n–°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞:</b> <code>–†–∞–±–æ—Ç–∞—éüëå</code>", 
                parse_mode=ParseMode.HTML, 
                reply_markup=keyboards.menu_kb
            )
    else:
        link = f'<a href="{cf.channel_link}">–∫–∞–Ω–∞–ª</a>'
        text = f"<b>‚ùï –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –≤—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ {link}.</b>"
        await bot.send_message(
            chat_id=message.chat.id,
            text=text,
            parse_mode=ParseMode.HTML,
            reply_markup=keyboards.check_sub_kb
        )
@dp.callback_query_handler()
async def call_back(call: types.CallbackQuery):
    if check_sub_channel(await bot.get_chat_member(chat_id=cf.channel_chat_id, user_id=call.from_user.id)):
        if call.data == "prices":

            text = "<b>–°–£–í–ï–ù–ò–†–ù–´–ï –ü–†–ê–í–ê ü™™</b>\n‚úÖ –ì–æ–ª–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –ª–∞–º–∏–Ω–∞—Ç - –ø–µ—Ä–µ–ª–∏–≤–∞—é—â–∏–µ—Å—è –∑–Ω–∞–∫–∏.\n‚úÖ –ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –º–∏–∫—Ä–æ—Ç–µ–∫—Å—Ç - –æ—á–µ–Ω—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ø–µ—á–∞—Ç—å.\n<b>‚ùóÔ∏è–ü–ï–ß–ê–¢–¨ –ü–û –ú–ò–ö–†–û-–í–û–õ–û–ö–û–ù–ù–û–ô –ü–õ–û–¢–ù–û–ô –ë–£–ú–ê–ì–ï –ü–û–í–´–®–ï–ù–ù–û–ì–û –ö–ê–ß–ï–°–¢–í–ê (–∫–∞–∫ –æ—Ä–∏–≥–∏–Ω–∞–ª)‚ùóÔ∏è</b>\n\n<u>–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è: </u>\n<b>‚úîÔ∏è –ö–ª—É–±–æ–≤\n‚úîÔ∏è –ü–æ–∫—É–ø–∫–∏ —Ç–∞–±–∞—á–∫–∏ –≤–µ–∑–¥–µ\n‚úîÔ∏è –ü—Ä–∏—ë–º–∞ –ø–æ—Å—ã–ª–æ–∫\n‚úîÔ∏è –ü–æ–Ω—Ç–æ–≤ –ø–µ—Ä–µ–¥ –¥—Ä—É–∑—å—è–º–∏\n‚úîÔ∏è –í—Å–µ–≥–æ, –≥–¥–µ –Ω—É–∂–Ω–æ –±—ã—Ç—å –Ω–µ–º–Ω–æ–≥–æ —Å—Ç–∞—Ä—à–µ</b>"

            file = InputFile(cf.price_video)
            await bot.edit_message_media(
                chat_id=call.from_user.id,
                message_id=call.message.message_id,
                media=file
            )
            await bot.edit_message_caption(
                chat_id=call.from_user.id,
                message_id=call.message.message_id,
                caption=text,
                parse_mode=ParseMode.HTML,
                reply_markup=keyboards.prices_kb
            )

        elif call.data == "delivery":
            text = "<b>–î–û–°–¢–ê–í–ö–ê üöö</b>\n\n–ù–µ–º–Ω–æ–≥–æ —Ä–∞—Å—Å–∫–∞–∂–µ–º –∫–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–æ—Å—Ç–∞–≤–∫–∞. –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å –ø–æ–º–æ—â—å—é –ü–æ—á—Ç—ã –†–æ—Å—Å–∏–∏ 1 –∫–ª–∞—Å—Å–∞. –°—Ä–æ–∫–∏ –∑–∞–Ω–∏–º–∞—é—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ –æ—Ç 2 –¥–æ 5 –¥–Ω–µ–π(–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≥–æ—Ä–æ–¥–∞). –ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ –≤–∞—à –≥–æ—Ä–æ–¥ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —É–∑–Ω–∞—Ç—å –≤–æ –≤—Ä–µ–º—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞."

            file = InputMedia(media=InputFile(cf.delivery_photo))
            await bot.edit_message_media(
                chat_id=call.from_user.id,
                message_id=call.message.message_id,
                media=file
            )
            await bot.edit_message_caption(
                chat_id=call.from_user.id,
                message_id=call.message.message_id,
                caption=text,
                parse_mode=ParseMode.HTML,
                reply_markup=keyboards.delivery_kb
            )
			
        elif call.data == "contacts":
            file = InputMedia(media=InputFile(cf.contacts_photo))
            await bot.edit_message_media(
                chat_id=call.from_user.id,
                message_id=call.message.message_id,
                media=file
            )
            await bot.edit_message_caption(
                chat_id=call.from_user.id,
                message_id=call.message.message_id,
                caption="<b>–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:</b>",
                parse_mode=ParseMode.HTML,
                reply_markup=keyboards.contacts_kb
            )


        elif call.data == "info":
            
            text = "<b>–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–µ—Ä–≤–∏—Å –ø–æ –ø—Ä–æ–¥–∞–∂–µ —Å—É–≤–µ–Ω–∏—Ä–Ω—ã—Ö –ø—Ä–∞–≤! –ù–µ–º–Ω–æ–≥–æ —Ä–∞—Å—Å–∫–∞–∂–µ–º, —á–µ–º –º—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è.\n\n–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –∏–∑–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç —Å—É–≤–µ–Ω–∏—Ä–Ω—ã–µ –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–∞–≤–∞. –í–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ. –ú—ã —Ç—Ä—É–¥–∏–º—Å—è –Ω–∞–¥ –∫–∞–∂–¥—ã–º –∑–∞–∫–∞–∑–æ–º –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ. –ö–ª–∏–µ–Ω—Ç –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å —Å–≤–æ–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è, —á—Ç–æ–±—ã –æ–Ω –æ—Å—Ç–∞–ª—Å—è –¥–æ–≤–æ–ª–µ–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–æ–π. –°–æ–≤–µ—Ä—à–∏–≤ —É –Ω–∞—Å –ø–æ–∫—É–ø–∫—É, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–µ–∑ –≤—Å—è–∫–∏—Ö —Å–æ–º–Ω–µ–Ω–∏–π.\nP.S. –ü—Ä–∞–≤–∞ —è–≤–ª—è—é—Ç—Å—è —Å—É–≤–µ–Ω–∏—Ä–Ω—ã–º–∏ –∏ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π –∏ –ø–æ—Å—Ç–∞–Ω–æ–≤–æ–∫.\n–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—É–≤–µ–Ω–∏—Ä–æ–≤ –∏–∑–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å –Ω–µ –Ω–µ—Å—ë—Ç!</b>\n\n<u>–î–ª—è –∑–∞–∫–∞–∑–∞ –ø–æ—Ç—Ä–µ–±—É–¥–µ—Ç—Å—è:</u>\n<b>1.</b> <code>–ñ–µ–ª–∞–µ–º–æ–µ –§–ò–û</code>\n<b>2.</b> <code>–ì–æ—Ä–æ–¥ –≤—ã–¥–∞—á–∏</code>\n<b>3.</b> <code>–ñ–µ–ª–∞–µ–º–∞—è –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è</code>\n<b>4.</b> <code>–§–æ—Ç–æ</code>\n\n–§–æ—Ç–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–µ–ª–∞—Ç—å –≤ —Å—Ç—É–¥–∏–∏. –ü–æ–¥–æ–π–¥—ë—Ç —Å–µ–ª—Ñ–∏ —Ä–æ–≤–Ω–æ —Å–ø–µ—Ä–µ–¥–∏ —Å —Ö–æ—Ä–æ—à–µ–º –æ—Å–≤–µ—â–µ–Ω–∏–µ–º."

            await bot.edit_message_caption(
                chat_id=call.from_user.id,
                message_id=call.message.message_id,
                caption=text,
                parse_mode=ParseMode.HTML,
                reply_markup=keyboards.info_kb
            )


        elif call.data == "back_to_menu":

            file = InputMedia(media=InputFile(cf.main_menu_photo))
            await bot.edit_message_media(
                chat_id=call.from_user.id,
                message_id=call.message.message_id,
                media=file
            )
            await bot.edit_message_caption(
                chat_id=call.from_user.id,
                message_id=call.message.message_id,
                caption="<b>–í—Å—é –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –∑–¥–µ—Å—å!\n–ë–æ—Ç –≤—Å–µ–≥–¥–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∏ –¥–æ–Ω–æ—Å–∏—Ç —Å–∞–º—É—é –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n\n–°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞:</b> <code>–†–∞–±–æ—Ç–∞—éüëå</code>",
                parse_mode=ParseMode.HTML,
                reply_markup=keyboards.menu_kb
            )

        elif call.data == "check_sub":
            await bot.send_message(
                chat_id=call.from_user.id,
                text=f"<b>{call.from_user.first_name}, –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>",
                parse_mode=ParseMode.HTML,
                reply_markup=keyboards.main_menu_kb
            )

            photo = InputFile(cf.main_menu_photo)
            await bot.send_photo(
                chat_id=call.from_user.id,
                photo=photo, 
                caption="<b>–í—Å—é –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –∑–¥–µ—Å—å!\n–ë–æ—Ç –≤—Å–µ–≥–¥–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∏ –¥–æ–Ω–æ—Å–∏—Ç —Å–∞–º—É—é –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n\n–°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞:</b> <code>–†–∞–±–æ—Ç–∞—éüëå</code>", 
                parse_mode=ParseMode.HTML, 
                reply_markup=keyboards.menu_kb
            )
        elif call.data == "alert":
            await Admin.alert.set()
            
            await bot.edit_message_text(
                chat_id=call.from_user.id,
                message_id=call.message.message_id,
                text=f"<b>üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç/—Ñ–æ—Ç–æ —Å —Ç–µ–∫—Å—Ç–æ–º —Ä–∞—Å—Å—ã–ª–∫–∏:</b>",
                parse_mode=ParseMode.HTML,
                reply_markup=back_to_adm
            )
    else:
        link = f'<a href="{cf.channel_link}">–∫–∞–Ω–∞–ª</a>'
        text = f"<b>‚ùï –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –≤—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ {link}.</b>"
        await bot.send_message(
            chat_id=call.from_user.id,
            text=text,
            parse_mode=ParseMode.HTML,
            reply_markup=keyboards.check_sub_kb
        )


@dp.message_handler(state=Admin.alert, content_types=types.ContentTypes.TEXT)
async def admin_alert(message: types.Message, state: FSMContext):

    db = DB()
    users = db.get_all_users()

    success, error, total = 0, 0, 0
    text = message.text
    for i in users:
        total+=1
        try:
            await bot.send_message(i[0], text)
            success+=1
        except:
            error+=1
    await state.finish()
    await bot.send_message(message.chat.id, f'–í—Å–µ–≥–æ —Ä–∞—Å—Å—ã–ª–æ–∫: {total}\n–£—Å–ø–µ—à–Ω–æ: {success}\n–ù–µ—É–¥–∞—á–Ω–æ: {error}')

@dp.message_handler(state=Admin.alert, content_types=types.ContentTypes.PHOTO)
async def admin_alert(message: types.Message, state: FSMContext):

    db = DB()
    users = db.get_all_users()

    success, error, total = 0, 0, 0
    file_id = message.photo[0].file_id
    text = message.caption
    for i in users:
        total+=1
        try:
            await bot.send_photo(i[0], file_id, caption=text)
            success+=1
        except:
            error+=1
    await state.finish()
    await bot.send_message(message.chat.id, f'–í—Å–µ–≥–æ —Ä–∞—Å—Å—ã–ª–æ–∫: {total}\n–£—Å–ø–µ—à–Ω–æ: {success}\n–ù–µ—É–¥–∞—á–Ω–æ: {error}')


@dp.callback_query_handler(state='*')
async def call_back(call: types.CallbackQuery, state: FSMContext):
    if call.data == "decline":
        await state.finish()
        await bot.delete_message(
            chat_id=call.from_user.id,
            message_id=call.message.message_id,
        )

def check_sub_channel(chat_member):
	if chat_member['status'] != 'left':
		return True
	else:
		return False


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    db = DB()
    db.create_users_table()
    executor.start_polling(dp, skip_updates=True)
